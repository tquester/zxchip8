: main 
    initfast
    hires
    clear 
		ve := 0
		initAmoebetron
		ve := 1
		initAmoebetron
   v0 := 1
   v1 := 20
	 v2 := 30
	 v3 := 0
	 v4 := 0
	 i := miner1
	 sprite v1 v2 0
	 i := minerdata
	 save v4

   v0 := 0
	 drawScene
	 v0 := 0
	 
	 
: Scene1
	 loop
	     fast
	     v1 := 0
	     v0 := 9
			 if v0 key begin
			     minerLeft
					 v1 := 1
			 end
			 v0 := 7
			 if v0 key begin
			    minerRight
					v1 := 1
			 end
			 v0 := 5
			 if v0 key then minerJump
			 vf := 0
			 if v1 == 1 begin
			    moveMiner
			 else
			    minerCheckJump
			 end
			 if vf == 1 then jump main
			 ve := 0
			 moveAmoebetron
			 ve := 1
			 moveAmoebetron
			 redraw
	  again
	jump main
	

:alias xdir v0
:alias x v1
:alias y v2
# 0 = walking, 1..6 jumping 7..12 = falling
:alias jumping v3
# sprite offset 0, 16, 32, 48
:alias iminer v4			
:alias x1 v5
:alias y1 v6

: minerLeft
		i := minersavedata
		save v4 
		i := minerdata
		load v4
		drawMiner
		xdir := 1
		drawMiner
		i := minerdata
		save v4
		i := minersavedata
		load v4
		return

: minerRight
		i := minersavedata
		save v4 
		i := minerdata
		load v4
		drawMiner
		xdir := -1
		drawMiner
		i := minerdata
		save v4
		i := minersavedata
		load v4
		return

: minerJump
		i := minersavedata
		save v4 
		i := minerdata
		load v4
		if jumping == 0 then jumping := 1
		i := minerdata
		save v4
		i := minersavedata
		load v4
		return

: minerCheckJump
		i := minersavedata
		save v4 
		i := minerdata
		load v4
		if jumping != 0 then moveMiner
		i := minersavedata
		load v4
		return		

		
		
		
: drawMiner		
  	i := miner1
		if xdir == -1 then i := minerr1
		i += iminer
		sprite x y 0
	 return

: moveMiner
# -1 backward 1 forward

#		i := minersavedata
#		save v4 
		i := minerdata
		load v4
		# delete miner from screen
		i := miner1
		if xdir == -1 then i := minerr1
		i += iminer
		x1 := x
		y1 := y
		iminer += 32
		if iminer == 160 then iminer := 0
		x += xdir
		if x < 1 then x := 1
		if x > 116 then x := 116
		if jumping != 0 begin
		   if jumping < 15 begin
			    y -= 1
				else
			    y += 1
			 end
			 jumping += 1
			 if jumping == 29 then jumping := 0
		end
		sprite x1 y1 0
		drawMiner
		i := minerdata
		save v4
#		i := minersavedata
#		load v4
		return
		
: drawScene
  i := scenedata
	save v0
	
	 drawScene0
	return
	
: drawScene0

	v1 := 10
	v2 := 0
	v3 := 0
	drawtext
	

	
  v0 := 0
	i := street
	x := 0
	y := 46
	loop
	  while x < 128
		sprite x y 4
		x += 8
	again
	x := 50
	y := 42
	i := plant
	sprite x y 4
	x := 100
	sprite x y 4
	return
	

: moveAmoebetron
:alias x v0						
:alias y v1
:alias miny v2
:alias maxy v3
:alias direction v4
:alias init v5
:alias spriteindex v6
:alias maxSpriteindex v7

:alias input ve									# index of amoebetron to draw

		ve += ve			# *2
		ve += ve		  # *4
		ve += ve		  # *8
		i := amoebetron1data
		i += ve
		load	v7			# v0..v7 now contain amoebetrons data
		
								  # clear amoebetron only if not the first one
		if init == 1 then drawAmoebetron
									# move and reverse direction
		y += direction
		if y > maxy then direction := -1
		if y < miny then direction := 1
		
								 # go to next sprite
		spriteindex += 1
		if spriteindex > maxSpriteindex then spriteindex := 0
		
		drawAmoebetron		
		init := 1
								 
		i := amoebetron1data
		i += ve
		save v7
		return

: drawAmoebetron
		i := amoebetron0
		vd := spriteindex
		vd += vd # *2
		vd += vd # *4
		vd += vd # *8
		vd += vd # *16
		i += vd
		sprite x y 12	  
	  return
		
: initAmoebetron
		ve += ve			# *2
		ve += ve		  # *4
		ve += ve		  # *8
		i := amoebetron1data
		i += ve
		load v7
		init := 0
		i := amoebetron1data
		i += ve
		save v7
		return
		
: drawTinyLetter
:alias letter v0
	 if letter > 96  begin		# 'a' = 97
	    v0 -= 97
			i := tinySmallA
			jump drawLetterSub
	 end
	 
	 if letter > 64 begin   # 'A' = 65
	    v0 -= 65
			i := tinyA
			jump drawLetterSub
	 end
	 
	 if letter > 47 begin  # '0' = 48
	    v0 -= 48
			i := tinyNumbers
			jump drawLetterSub
	 end
	 v1 += 5
	 return
: drawLetterSub
	  v4 := v0
		v0 += v0 # *2
		v0 += v0 # *4
		v0 += v4 # *5
		i += v0
		sprite v1 v2 5
		v1 += 5
		return

: drawtext
   # v3 = offset to text starting from : text
	 loop 
	    i := text
			i += v3
			load v0
				while v0 != 0
				drawTinyLetter
				v3 += 1
	 again
	 return
			
			
: initfast
  i := 0
	load v1
	if v0 == 90 begin
	   if v1 == 88 begin
		    v0 := 0xF0
				v1 := 0xE0
				i := fast
				save v1
				v0 := 0xF1
				i := slow
				save v1
				v0 := 0xf2
				i := redraw
				save v1
				
				
		 end
  end
	return
		
: fast
   return 
	 return
	 
: slow
   return 
	 return

: redraw
   return
	 return
	 
	 
: bytes16
0x01 0x02 0x03 0x04 0x05 0x06 0x07 0x08 0x09 0x0a 0x0b 0x0c 0x0d 0x0e 0x0f 0x00
: text	 
: scene1name # offset = 0
0x45 0x6E 0x74 0x65 0x72 0x20 0x74 0x68 0x65 0x20 0x6D 0x69 0x6E 0x65 0x00 #"Enter the mine"
: text2 # offset = 16

: scenedata
0x00


: minerdata
0x00 0x00 0x00 0x00 0x00
: minersavedata
0x00 0x00 0x00 0x00 0x00

: dot
0x01

: street
0xAA 0x55 0xFF 0xFF 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

# Amoebetrons move up and down
# each data = 6 bytes
: amoebetron1data
50    # x pos 
0x11 		# y pos
0x09 	  # min y
0x32		# max x
0x01		# direction
0x00		# 00 = draw first sprite
0x00		# sprite index
0x03    # max sprite index

: amoebetron2data
100		# x pos 
0x08	# y pos
0x09 	  # min y
0x32		# max x
0x01		# direction
0x00		# 00 = draw first sprite
0x00		# sprite index
0x03    # max sprite index

: amoebetron0
0x00 0x00 0x12 0x6D 0xC9 0xF2 0xBC 0xB8 0x58 0x14 0x14 0x24 0x44 0x80 0x00 0x00
: amoebetron1
0x00 0x00 0x00 0x6C 0x49 0x72 0xBC 0xB8 0x58 0x14 0x14 0x24 0x40 0x00 0x00 0x00
: amoebetron2
0x00 0x00 0xC8 0x48 0x48 0x70 0x3C 0x3A 0x58 0x54 0x92 0x10 0x10 0x00 0x00 0x00

: plant
0x92 0x54 0x28 0x10 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: miner1
0x00 0xC0 0x07 0xC0 0x0F 0x80 0x06 0x80 0x07 0xC0 0x07 0x80 0x03 0x00 0x07 0x80 
0x0F 0xC0 0x0F 0xC0 0x1E 0xE0 0x1F 0x60 0x07 0x80 0x0E 0xC0 0x0D 0xC0 0x0E 0xE0
: miner2
0x00 0xC0 0x07 0xC0 0x0F 0x80 0x06 0x80 0x07 0xC0 0x07 0x80 0x03 0x00 0x07 0x80
0x0D 0xC0 0x0D 0xC0 0x0D 0xC0 0x0E 0xC0 0x07 0x80 0x03 0x00 0x03 0x00 0x03 0x80
: miner3
0x00 0xC0 0x07 0xC0 0x0F 0x80 0x06 0x80 0x07 0xC0 0x07 0x80 0x03 0x00 0x07 0x80 
0x0F 0xC0 0x0F 0xC0 0x1E 0xE0 0x1F 0x60 0x07 0x80 0x0E 0xC0 0x0D 0xC0 0x0E 0xE0
: miner4:
0x00 0xC0 0x07 0xC0 0x0F 0x80 0x06 0x80 0x07 0xC0 0x07 0x80 0x03 0x00 0x07 0x80
0x0F 0xC0 0x1F 0xE0 0x3F 0xF0 0x37 0xB0 0x07 0xC0 0x0E 0xD0 0x18 0x70 0x1C 0x60
: miner5
0x00 0xC0 0x07 0xC0 0x0F 0x80 0x06 0x80 0x07 0xC0 0x07 0x80 0x03 0x00 0x07 0x80
0x0D 0xC0 0x0D 0xC0 0x0D 0xC0 0x0E 0xC0 0x07 0x80 0x03 0x00 0x03 0x00 0x03 0x80

: minerr1
0x03 0x00 0x03 0xe0 0x01 0xf0 0x01 0x60 0x03 0xe0 0x01 0xe0 0x00 0xc0 0x01 0xe0 
0x03 0xf0 0x03 0xf0 0x07 0x78 0x06 0xf8 0x01 0xe0 0x03 0x70 0x03 0xb0 0x07 0x70 
: minerr2
0x03 0x00 0x03 0xe0 0x01 0xf0 0x01 0x60 0x03 0xe0 0x01 0xe0 0x00 0xc0 0x01 0xe0 
0x03 0xb0 0x03 0xb0 0x03 0xb0 0x03 0x70 0x01 0xe0 0x00 0xc0 0x00 0xc0 0x01 0xc0 
: minerr3
0x03 0x00 0x03 0xe0 0x01 0xf0 0x01 0x60 0x03 0xe0 0x01 0xe0 0x00 0xc0 0x01 0xe0 
0x03 0xf0 0x03 0xf0 0x07 0x78 0x06 0xf8 0x01 0xe0 0x03 0x70 0x03 0xb0 0x07 0x70 
: minerr4
0x03 0x00 0x03 0xe0 0x01 0xf0 0x01 0x60 0x03 0xe0 0x01 0xe0 0x00 0xc0 0x01 0xe0 
0x03 0xf0 0x07 0xf8 0x0f 0xfc 0x0d 0xec 0x03 0xe0 0x0b 0x70 0x0e 0x18 0x06 0x38 
: minerr5
0x03 0x00 0x03 0xe0 0x01 0xf0 0x01 0x60 0x03 0xe0 0x01 0xe0 0x00 0xc0 0x01 0xe0 
0x03 0xb0 0x03 0xb0 0x03 0xb0 0x03 0x70 0x01 0xe0 0x00 0xc0 0x00 0xc0 0x01 0xc0 

: tinyA
	0xE0 0xA0 0xE0 0xA0 0xA0 # A
	0xE0 0xA0 0xC0 0xA0 0xE0 # B
	0x60 0x80 0x80 0x80 0x60 # C
	0xC0 0xA0 0xA0 0xA0 0xE0 # D
	0xE0 0x80 0xC0 0x80 0xE0 # E
	0xE0 0x80 0xC0 0x80 0x80 # F
	0x60 0x80 0x80 0xA0 0xE0 # G
	0xA0 0xA0 0xE0 0xA0 0xA0 # H
	0xE0 0x40 0x40 0x40 0xE0 # I
	0xE0 0x40 0x40 0x40 0xC0 # J
	0xA0 0xA0 0xC0 0xA0 0xA0 # K
	0x80 0x80 0x80 0x80 0xE0 # L
	0xE0 0xE0 0xA0 0xA0 0xA0 # M
	0xC0 0xA0 0xA0 0xA0 0xA0 # N
	0x60 0xA0 0xA0 0xA0 0xC0 # O
	0xE0 0xA0 0xE0 0x80 0x80 # P
	0x40 0xA0 0xA0 0xC0 0x60 # Q
	0xE0 0xA0 0xC0 0xA0 0xA0 # R
	0x60 0x80 0xE0 0x20 0xC0 # S
	0xE0 0x40 0x40 0x40 0x40 # T
	0xA0 0xA0 0xA0 0xA0 0x60 # U
	0xA0 0xA0 0xA0 0xE0 0x40 # V
	0xA0 0xA0 0xA0 0xE0 0xE0 # W
	0xA0 0xA0 0x40 0xA0 0xA0 # X
	0xA0 0xA0 0xE0 0x20 0xE0 # Y
	0xE0 0x20 0x40 0x80 0xE0 # Z
: tinySmallA
	0x00 0xE0 0xA0 0xE0 0xA0 # a
	0x00 0xC0 0xE0 0xA0 0xE0 # b
	0x00 0xE0 0x80 0x80 0xE0 # c
	0x00 0xC0 0xA0 0xA0 0xC0 # d
	0x00 0xE0 0xC0 0x80 0xE0 # e
	0x00 0xE0 0xC0 0x80 0x80 # f
	0x00 0xE0 0x80 0xA0 0xE0 # g
	0x00 0xA0 0xA0 0xE0 0xA0 # h
	0x00 0xE0 0x40 0x40 0xE0 # i
	0x00 0xE0 0x40 0x40 0xC0 # j
	0x00 0xA0 0xC0 0xA0 0xA0 # k
	0x00 0x80 0x80 0x80 0xE0 # l
	0x00 0xE0 0xE0 0xA0 0xA0 # m
	0x00 0xC0 0xA0 0xA0 0xA0 # n
	0x00 0x60 0xA0 0xA0 0xC0 # o
	0x00 0xE0 0xA0 0xE0 0x80 # p
	0x00 0x40 0xA0 0xC0 0x60 # q
	0x00 0xE0 0xA0 0xC0 0xA0 # r
	0x00 0x60 0x80 0x20 0xC0 # s
	0x00 0xE0 0x40 0x40 0x40 # t
	0x00 0xA0 0xA0 0xA0 0x60 # u
	0x00 0xA0 0xA0 0xE0 0x40 # v
	0x00 0xA0 0xA0 0xE0 0xE0 # w
	0x00 0xA0 0x40 0xA0 0xA0 # x
	0x00 0xA0 0xE0 0x20 0xE0 # y
	0x00 0xE0 0x20 0x80 0xE0 # z
: tinyNumbers
	0xE0 0xA0 0xA0 0xA0 0xE0 # 0
	0xC0 0x40 0x40 0x40 0xE0 # 1
	0xE0 0x20 0xE0 0x80 0xE0 # 2
	0xE0 0x20 0x60 0x20 0xE0 # 3
	0xA0 0xA0 0xE0 0x20 0x20 # 4
	0xE0 0x80 0xE0 0x20 0xE0 # 5
	0x80 0x80 0xE0 0xA0 0xE0 # 6
	0xE0 0x20 0x20 0x20 0x20 # 7
	0xE0 0xA0 0xE0 0xA0 0xE0 # 8
	0xE0 0xA0 0xE0 0x20 0x20 # 9
	0x00 0x00 0x00 0x00 0x40 # .
	0x40 0x40 0x40 0x00 0x40 # !
	0xE0 0x20 0x60 0x00 0x40 # ?
	0x00 0x00 0x00 0x40 0x80 # ,
	0x40 0x80 0x00 0x00 0x00 # '
	0x00 0x00 0xE0 0x00 0x00 # -
	0xA0 0xA0 0x00 0x00 0x00 # "





