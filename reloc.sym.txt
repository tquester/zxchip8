line_50_begin: EQU 0x00005C4A
line_50_length: EQU 0x00000008
line_40_begin: EQU 0x00005C3F
line_40_length: EQU 0x00000007
line_30_begin: EQU 0x00005C32
line_30_length: EQU 0x00000009
line_20_begin: EQU 0x00005C1F
line_20_length: EQU 0x0000000F
line_10_begin: EQU 0x00005C04
line_10_length: EQU 0x00000017
code_size: EQU 0x00009453
chip8Game11X: EQU 0x0000F44F
romCollectionSize: EQU 0x000047F8
chip8Game9X: EQU 0x0000F44F
chip8Game9: EQU 0x0000E76A
chip8Game8X: EQU 0x0000D482
chip8Game7X: EQU 0x0000D482
chip8Game7: EQU 0x0000D026
chip8Game5X: EQU 0x0000CEA1
chip8Game5: EQU 0x0000C0A0
chip8Game4X: EQU 0x0000BC14
chip8Game4: EQU 0x0000BA24
chip8Game2X: EQU 0x0000B477
chip8Game2: EQU 0x0000AF60
chip8Game1X: EQU 0x0000AEA7
chip8Game1: EQU 0x0000AD8D
romCollection: EQU 0x0000AC57
stack_bottom: EQU 0x0000AA63
initGameInfo: EQU 0x0000A969
chip8InitGameLen: EQU 0x00000794
fontsize: EQU 0x000000F0
chip8ScreenEnd: EQU 0x0000935C
ballsprite: EQU 0x00008ED4
skipStringHLLoop: EQU 0x00008ECC
chip8GameMenuFoundNoText: EQU 0x00008EB5
chip8GameMenuFound: EQU 0x00008EA6
chip8GameMenuNotFound: EQU 0x00008EA4
chip8GameMenuFind: EQU 0x00008E8A
chip8GameMenuStartFind: EQU 0x00008E87
chip8GameMenuStartFindA: EQU 0x00008E85
skipStringHL: EQU 0x00008ECB
chip8GameMenuWait: EQU 0x00008E6E
chip8GameMenuLoop: EQU 0x00008E49
chip8Games: EQU 0x0000AC61
strNo: EQU 0x00008DA6
strYes: EQU 0x00008DA2
yesno_no: EQU 0x00008D9E
menuChangeUpdate1: EQU 0x00008D53
txtUpdateInterrupt: EQU 0x00008D82
txtUpdateInterruptNr: EQU 0x00008D8E
txtUpdateDirect: EQU 0x00008D6C
printMenuHintBig: EQU 0x00008DA9
chip8GameMenu: EQU 0x00008E2B
menuChangeUpdate: EQU 0x00008D44
menuModifyShift: EQU 0x00008C98
menuModifyAddI: EQU 0x00008C8D
menuSetZoom: EQU 0x00008CA3
menuQuitToGame: EQU 0x00008CB2
menuChangeWait: EQU 0x00008CD5
menuDebugGame: EQU 0x00008CF1
menuLoadGame: EQU 0x00008CCE
menuResetGame: EQU 0x00008CBD
menuStartGame: EQU 0x00008CAE
selectGame: EQU 0x00008CF8
chip8MenuLoop: EQU 0x00008C5A
chip8MenuZoom: EQU 0x00008B88
yesno: EQU 0x00008D96
getTextUpdate: EQU 0x00008D2F
dodebug_stepinto: EQU 0x00008B24
dodebug_go9: EQU 0x00008B1D
dodebug_go0: EQU 0x00008B16
dodebug_run7_loop: EQU 0x00008ACA
dodebug_restart: EQU 0x00008A9F
dodebug_update: EQU 0x00008AC1
dodebug_print: EQU 0x00008AA5
dodebug_run7: EQU 0x00008AC6
dodebug_run8: EQU 0x00008ADB
dodebug_run9: EQU 0x00008AE2
dodebug_run0: EQU 0x00008AB9
dodebug_end: EQU 0x00008A76
dodebug_run: EQU 0x00008B05
dodebug_end2: EQU 0x00008B04
dodebug_1: EQU 0x00008A69
printcpuLoopI: EQU 0x00008A3B
printcpuloop2: EQU 0x000089FA
printcpuloop1: EQU 0x000089D8
printcpunodb: EQU 0x000089C1
debuggerScreenEnd: EQU 0x00008970
debuggerScreenLoopBP2: EQU 0x00008960
debuggerScreenLoopBP1: EQU 0x0000895E
debuggerScreenLoop1: EQU 0x0000894D
debuggerScreenLoop: EQU 0x0000893C
debuggerDown1: EQU 0x000088F1
debuggerUp1: EQU 0x000088CC
debugSetClearBPSet: EQU 0x0000887A
debugSetClearBP: EQU 0x0000886B
debuggerPgDown: EQU 0x0000887F
debuggerPgUp: EQU 0x00008895
debuggerDown: EQU 0x000088D0
debuggerUp: EQU 0x000088AE
debuggerQuit: EQU 0x0000885E
debuggerMainKey: EQU 0x00008839
debuggerScreen: EQU 0x000088F5
debuggerMain: EQU 0x00008836
setBreakpointEnd: EQU 0x00008825
setBreakpoint2: EQU 0x0000882E
setBreakpoint1: EQU 0x00008811
SetBreakpointHl: EQU 0x00008806
clearBreakpointEnd: EQU 0x000087F2
clearBreakpoint2: EQU 0x000087FB
clearBreakpoint1: EQU 0x000087E1
ClearBreakpointHl: EQU 0x000087D4
isHlBreakpointEnd: EQU 0x000087CA
isHlBreakpoint2: EQU 0x000087D0
isHlBreakpoint1: EQU 0x000087B7
countBreakpointsLoop2: EQU 0x0000879E
countBreakpointsLoopCount: EQU 0x0000879D
countBreakpointsLoop: EQU 0x00008789
disassBreakpoints: EQU 0x00008757
disassMaxBreakpoints: EQU 0x00000014
disassNumBreakpoints: EQU 0x00008756
debug_gobp: EQU 0x00008754
DEBUG_GO: EQU 0x00000002
DEBUG_GONEXT: EQU 0x00000001
disassCur: EQU 0x00008750
disassAdr: EQU 0x0000874E
emitdezHLEnd: EQU 0x000086DC
emitdezHLLoop2: EQU 0x000086CE
emitdezHLLoop: EQU 0x000086A5
emitDezHL: EQU 0x00008675
emitDezHlSign_1: EQU 0x00008670
emitDezHlSign: EQU 0x00008655
emitdezEnd: EQU 0x00008644
emitdezLoop2: EQU 0x00008636
emitdezLoop: EQU 0x00008611
emitDezA: EQU 0x000085E2
emitDez2Sgn2: EQU 0x000085DF
emitHex2Sgn2: EQU 0x000085CC
emitHex2Sgn: EQU 0x000085BC
emitNibble2: EQU 0x000085B9
emitNibbleDigit: EQU 0x000085B7
demittextend: EQU 0x000085AD
demittext1: EQU 0x000085A2
dPrintText_2: EQU 0x0000858E
dPrintText_1: EQU 0x00008583
dPrintText: EQU 0x0000857C
chip8f_audio: EQU 0x000084DA
chip8f_plane: EQU 0x000084CD
chip8f_56: EQU 0x0000856B
chip8f_55: EQU 0x00008559
chip8f_33: EQU 0x00008549
chip8f_29: EQU 0x00008538
chip8f_0a: EQU 0x00008523
chip8f_18: EQU 0x00008503
chip8f_15: EQU 0x000084F4
chip8f_07: EQU 0x000084E4
emitHighReg: EQU 0x0000848E
dchip8skipifkey_a1: EQU 0x0000847B
dchip8skipifkey_9e: EQU 0x00008469
dEmitA: EQU 0x00008593
emitEqual: EQU 0x000083BB
dchip8_regY: EQU 0x000083B1
dchip8_regX: EQU 0x000083A7
dchip8_E: EQU 0x00008392
dchip8_7: EQU 0x0000837E
dchip8_6: EQU 0x00008369
dchip8_5: EQU 0x00008355
dchip8_4: EQU 0x00008341
dchip8_3: EQU 0x0000832B
dchip8_2: EQU 0x00008316
dchip8_1: EQU 0x00008302
dchip8_0: EQU 0x000082EC
emitNibble: EQU 0x000085AF
emitText: EQU 0x000085A1
dchip8unknowncall: EQU 0x000081EF
dchip8call_rts: EQU 0x00008206
dchip8call_cls: EQU 0x000081FE
dchip8timers: EQU 0x00008499
dchip8skipifkey: EQU 0x0000844F
dchip8display: EQU 0x00008429
dchip8xrand: EQU 0x0000840C
dchip8jumpofs: EQU 0x000083F6
dchip8setindex: EQU 0x000083EA
dchip89: EQU 0x000083C3
dchip8setetc: EQU 0x000082B4
dchip8addnnvx: EQU 0x0000829E
dchip8setvxnn: EQU 0x00008289
dchip8skipvxeqvy: EQU 0x00008263
dchip8skipvxnenn: EQU 0x00008245
dchip8skipvxeqnn: EQU 0x00008228
dchip8call: EQU 0x0000821B
dchip8jump: EQU 0x0000820E
dchip8callasm: EQU 0x000081E6
chip8disassend: EQU 0x000081BD
disassJumpTable: EQU 0x000081C6
emitHex2: EQU 0x000086F0
emitSpace: EQU 0x00008599
emitHex4: EQU 0x00008707
chip8disass: EQU 0x0000816A
opt_new_jump: EQU 0x00008165
countBreakpoints: EQU 0x0000877F
resetloop: EQU 0x00008116
startchip8: EQU 0x000080CF
octoChip8loadFlags: EQU 0x000080BA
chip8f85: EQU 0x000080B5
chip8f75: EQU 0x000080B4
chip8fStore: EQU 0x00008056
chip8f33_loop: EQU 0x0000803C
bigfont: EQU 0x000099B9
chip80a_menu: EQU 0x00007FC9
chip80a_debug: EQU 0x00007FBF
octoChip8LongI: EQU 0x000080BE
chip8Font: EQU 0x00009969
octoChip8Pitch: EQU 0x000080BD
octoChip8Audio: EQU 0x000080BC
octoChip8Plane: EQU 0x000080BB
octoChip8saveFlags: EQU 0x000080B9
chip8fF8: EQU 0x000080B8
chip8fFB: EQU 0x000080B7
chip8f94: EQU 0x000080B6
chip8f65: EQU 0x0000808A
chip8f55: EQU 0x00008060
chip8f33: EQU 0x00008023
chip8f30: EQU 0x0000800E
chip8f29: EQU 0x00007FF9
chip8f1E: EQU 0x00007FDA
chip8f18: EQU 0x00007FD3
chip8f15: EQU 0x00007FCE
chip8f0A: EQU 0x00007FAF
chip8f07: EQU 0x00007FAA
chip8skipifkeya1: EQU 0x00007EEE
chip8skipifkey9e: EQU 0x00007EE3
chip8shifte1: EQU 0x00007E42
chip8shleft1: EQU 0x00007E2F
chip8shleft: EQU 0x00007E27
chip8shrightNew: EQU 0x00007E0F
chip8shifte: EQU 0x00007E3A
chip8subyx: EQU 0x00007E1A
chip8shright: EQU 0x00007E07
chip8subxy: EQU 0x00007DFA
chip8add8: EQU 0x00007DEF
chip8xor8: EQU 0x00007DE3
chip8and8: EQU 0x00007DDF
chip8or8: EQU 0x00007DDB
chip8set8: EQU 0x00007DD9
chip8illegal: EQU 0x00007D7C
chip8jmp8: EQU 0x00007DB9
octoSaveLoop2: EQU 0x00007D2F
octoSaveLoop1: EQU 0x00007D21
octoSavexyR: EQU 0x00007D2B
shifte: EQU 0x00007D07
octoLoadxy: EQU 0x00007D39
octoSavexy: EQU 0x00007D10
cpu_new_shift: EQU 0x00008167
opt_new_addi: EQU 0x00008166
chip8UpdateScreen: EQU 0x00007C40
chip8ScrollUpUpN: EQU 0x00007C1D
chip8ScrollUpDownN: EQU 0x00007C16
chip8stop: EQU 0x00007C01
chip8Scroll4Left: EQU 0x00007C10
chip8Scroll4Right: EQU 0x00007C0A
chip8SetChip8Screen: EQU 0x00007C22
chip8SetSuperScreen: EQU 0x00007C2E
chip8rts: EQU 0x00007C64
chip8cls: EQU 0x00007C44
cpufinloop: EQU 0x00007BCF
opt_wait: EQU 0x00008168
cpuloop: EQU 0x00007B7C
chip8cpu: EQU 0x00007B65
updateScreenOnI: EQU 0x00007B5D
skiplong: EQU 0x00007B58
skip1: EQU 0x00007B46
skip: EQU 0x00007B3A
vinterrupt_2: EQU 0x00007B39
vinterrupt_1: EQU 0x00007B2E
vinterruptcheckKey: EQU 0x00007B1B
chip8timers: EQU 0x00007EF9
chip8skipifkey: EQU 0x00007ED2
chip8display: EQU 0x00007E96
chip8xrand: EQU 0x00007E86
chip8jumpofs: EQU 0x00007E75
chip8setindex: EQU 0x00007E6E
chip89: EQU 0x00007E4D
chip8setetc: EQU 0x00007D52
chip8addnnvx: EQU 0x00007D47
chip8setvxnn: EQU 0x00007D3A
chip8skipvxeqvy: EQU 0x00007CDB
chip8skipvxnenn: EQU 0x00007CC9
chip8skipvxeqnn: EQU 0x00007CB7
chip8call: EQU 0x00007C99
chip8jump: EQU 0x00007C86
chip8callasm: EQU 0x00007BD2
cpuJumpTable: EQU 0x00007AFB
IsBreakpointHl: EQU 0x000087A7
cpuTestBreakpoint3: EQU 0x00007AF5
cpuTestBreakpoint2: EQU 0x00007AEE
cpuTestBreakpoint0: EQU 0x00007AD9
cpuTestBreakpoint: EQU 0x00007ACE
cpuIsBreakpoint: EQU 0x00007AC8
cpuwait: EQU 0x00007ABC
chip8Menu: EQU 0x00008B32
resetcpu: EQU 0x000080F3
debug_go: EQU 0x00008753
DEBUG_STEP: EQU 0x00000000
printMenuHint: EQU 0x00008CFE
gameInfo: EQU 0x0000AA61
cpuKeyInfo: EQU 0x00007A93
cpukeyMenu: EQU 0x00007AB4
cpukeyReset: EQU 0x00007AB0
cpuKeySingleStep: EQU 0x00007AAA
cpuCheckKey: EQU 0x00007A78
dodebug: EQU 0x00008A4C
cpu_debug: EQU 0x00008752
printcpu: EQU 0x00008977
cpuDoDebug: EQU 0x00007A6C
reg_size: EQU 0x00000044
reg_quit: EQU 0x00000043
reg_stacktop: EQU 0x00000042
reg_stack: EQU 0x00000020
reg_cpuStepOverBreakpointAdr: EQU 0x00000020
reg_cpuStepOverBreakpointNext: EQU 0x0000001E
reg_cpuStepOverBreakpoint: EQU 0x0000001D
reg_hasBreakpoint: EQU 0x0000001C
reg_fakeir: EQU 0x0000001A
reg_sp: EQU 0x00000018
reg_pc: EQU 0x00000016
reg_delay: EQU 0x00000013
reg_sound: EQU 0x00000012
reg_i: EQU 0x00000010
reg_ve: EQU 0x0000000D
reg_vd: EQU 0x0000000D
reg_vc: EQU 0x0000000C
reg_vb: EQU 0x0000000B
reg_va: EQU 0x0000000A
reg_v9: EQU 0x00000009
reg_v8: EQU 0x00000008
reg_v7: EQU 0x00000007
reg_v6: EQU 0x00000006
reg_v5: EQU 0x00000005
reg_v4: EQU 0x00000004
reg_v3: EQU 0x00000003
reg_v2: EQU 0x00000002
reg_v1: EQU 0x00000001
reg_v0: EQU 0x00000000
STARTMODE: EQU 0x00000003
DEBUG_RUN: EQU 0x00000003
breakonunknown: EQU 0x00000001
debugcpu: EQU 0x00000001
chip8FontEnd: EQU 0x00007A6C
chip8Font1016: EQU 0x0000792C
screen_translation_table: EQU 0x00007906
readHexKeyboardNoKey2: EQU 0x000078F2
readHexKeyboard2: EQU 0x000078CB
keyboard_map: EQU 0x00007908
readHexKeyboardNoKey: EQU 0x000078B2
readHexKeyboard1: EQU 0x000078C4
readHexKeyboard: EQU 0x000078AB
translateHexKeybardA: EQU 0x000078C4
checkMultipleHexKeyNotFound: EQU 0x000078A4
checkMultipleHexKeyLoop: EQU 0x00007890
checkMultipleHexKeyA: EQU 0x00007887
scrollUpA: EQU 0x00007886
scrollDownLoop2: EQU 0x00007877
scrollDownLoop1: EQU 0x00007871
scrollDownLoop: EQU 0x00007852
scrollDownA: EQU 0x00007820
scroll4LeftLoop2: EQU 0x0000780F
scroll4LeftLoop: EQU 0x00007808
scroll4Left: EQU 0x000077F6
scroll4RightLoop2: EQU 0x000077E6
scroll4RightLoop: EQU 0x000077E0
scroll4Right: EQU 0x000077CE
setChipScreen: EQU 0x000077A4
setSuperChipSub: EQU 0x00007775
setSuperChip: EQU 0x0000775F
SCREEN_MODE_NO_ZOOM: EQU 0x00000004
chip8_screen_mode: EQU 0x0000775E
checkDEisInScreenErr: EQU 0x0000774D
checkDEisInScreenOk: EQU 0x00007744
checkDEisInScreen: EQU 0x00007733
copySpriteToScreen1x1LineLoop1: EQU 0x00007708
copySpriteToScreen1x1LineLoop: EQU 0x000076E4
copySpriteToScreenChipByteCopy1: EQU 0x000076A4
error1: EQU 0x00007652
copySpriteToScreenChipByteCopy2: EQU 0x0000764D
copySpriteToScreenChipByteLoopMagEnd: EQU 0x00007649
copySpriteToScreenChipByteLoopMag4: EQU 0x0000763D
copySpriteToScreenChipByteLoop: EQU 0x00007625
setBto2: EQU 0x000076AB
setBto1: EQU 0x000076A8
screen_bytes_per_pixel: EQU 0x0000775D
copySpriteToScreenChipCopyByteLoop: EQU 0x00007606
copySpriteToScreenLineLoop: EQU 0x000075EC
copySpriteToScreenMag: EQU 0x000075DF
copySpriteToScreenMag4: EQU 0x000075DA
copySpriteToScreen2: EQU 0x000075C2
copySpriteToScreen1: EQU 0x00007598
updateScreen1x1: EQU 0x000076AE
copySpriteToScreenMarkDirty: EQU 0x00007578
copySpriteToScreen1a: EQU 0x0000757D
updateSScreen1: EQU 0x00007539
updateScreen1: EQU 0x000074C9
updateScreenLine1: EQU 0x000074C7
updateScreenLine: EQU 0x000074BA
updateSScreen: EQU 0x000074F7
updateScreen: EQU 0x00007475
sspriteRowBit1: EQU 0x0000742D
sspritRowShift0: EQU 0x00007435
sspriteRow1: EQU 0x00007413
schip8sprite_calc1: EQU 0x000073DD
screen_width: EQU 0x00007756
chip8spriteClipped: EQU 0x000073C7
updateSpriteScreenEnd: EQU 0x000073C5
updateSpriteScreen1: EQU 0x000073BE
copySpriteToScreen: EQU 0x0000755D
updateSpriteScreen: EQU 0x000073AF
spriteRowBit1: EQU 0x0000736F
spritRowShift0: EQU 0x00007375
spriteRow1: EQU 0x0000735C
sprite8NotLastByte: EQU 0x00007355
calcSpriteAdrInChip8Screen: EQU 0x000073CD
reg_vf: EQU 0x0000000F
cpu_registers: EQU 0x00008121
spriteSChip: EQU 0x000073F9
screen_mask_y: EQU 0x0000775C
ok: EQU 0x00007316
screen_mask_x: EQU 0x0000775B
chip8sprite: EQU 0x000072DA
spriteCheckMaxLinesEnd: EQU 0x000072D8
spriteCheckMaxLines2: EQU 0x000072C8
spriteCheckMaxLines: EQU 0x000072B2
priprintChip8A_end: EQU 0x000072AB
printChip8A_1: EQU 0x000072A2
printChip8A: EQU 0x00007278
prepareSChip8Screen_3: EQU 0x00007258
prepareSChip8Screen_2: EQU 0x00007253
prepareSChip8Screen_1: EQU 0x0000724D
prepareChip8Screen_3: EQU 0x0000721D
prepareChip8Screen_2: EQU 0x00007218
prepareSChip8Screen: EQU 0x00007247
prepareChip8Screen: EQU 0x00007209
initChip8: EQU 0x000071FB
clearScreenChip8_1: EQU 0x000071E8
clearScreenChip8: EQU 0x000071DF
updateScreenChip81x1LineLoop: EQU 0x000071C2
updateGameScreen1x1: EQU 0x00007176
updateScreenChip8CopyLine: EQU 0x0000714B
schip8ScreenBytes: EQU 0x0000975C
updateScreenChip8Loop4Paint: EQU 0x0000712B
emitDez2Sgn: EQU 0x000085D0
chip8ScreenBytes: EQU 0x0000935C
updateScreenChip8Loop2Super: EQU 0x00007125
updateScreenChip8Loop2: EQU 0x0000710D
updateScreenChip8End: EQU 0x00007165
screen_mag_y: EQU 0x0000775A
updateScreenChip8Loop1a: EQU 0x00007101
screen_widthbytes: EQU 0x00007758
updateScreenChip8Loop1: EQU 0x000070D3
screen_height: EQU 0x00007757
updateScreenChip81x1: EQU 0x000071A7
screen_mag_x: EQU 0x00007759
SCREEN_MODE_SCHIP8: EQU 0x00000001
SCREEN_MODE_CHIP8: EQU 0x00000000
us_var_space: EQU 0x00000004
us_chip_y: EQU 0x00000003
us_var_y: EQU 0x00000002
us_var_x: EQU 0x00000001
updateGameScreenDirtyLines: EQU 0x00007061
updateScreenChip8: EQU 0x0000708B
chip8Screen: EQU 0x00008EDC
updateGameScreen1: EQU 0x0000704D
updateGameScreen: EQU 0x00007042
dirtyScreenLines: EQU 0x00007002
screenSkipCounter: EQU 0x00007001
screenSkipFrames: EQU 0x00007000
screenNeedsRedraw: EQU 0x00006FFF
screenDirty: EQU 0x00006FFE
updateOnInterrupt: EQU 0x00006FFD
SpriteVar.padding: EQU 0x00000014
SpriteVar.memoryCopy: EQU 0x00000012
SpriteVar.memory: EQU 0x00000010
SpriteVar.screenIdx: EQU 0x0000000E
SpriteVar.lineEnd: EQU 0x0000000C
SpriteVar.line: EQU 0x0000000A
SpriteVar.magtable: EQU 0x00000008
SpriteVar.data: EQU 0x00000006
SpriteVar.lines: EQU 0x00000005
SpriteVar.xlargebyte: EQU 0x00000003
SpriteVar.xbyte: EQU 0x00000002
SpriteVar.y: EQU 0x00000001
SpriteVar.x: EQU 0x00000000
SpriteVar: EQU 0x00000018
checkScreenRange: EQU 0x00000000
beeploop2x: EQU 0x00006E49
beeploop1x: EQU 0x00006E3C
beeploop1: EQU 0x00006E2A
beeploop2: EQU 0x00006E25
border: EQU 0x00006E4C
markScreenLoop1: EQU 0x00006E10
markScreenLoop: EQU 0x00006E09
markScreen: EQU 0x00006E00
clearAttribLoop: EQU 0x00006DED
clearScreenLoop: EQU 0x00006DD8
calclines3: EQU 0x00006DAE
calclines2: EQU 0x00006DA7
calclines1: EQU 0x00006DA3
cls2: EQU 0x00006D8F
cls1: EQU 0x00006D82
ReadMKeyboard_2: EQU 0x00006D42
ReadMKeyboard_1: EQU 0x00006D32
ReadMKeyboard_0: EQU 0x00006D2A
ReadKeyboardPressedKeys: EQU 0x00006D53
ReadMKeyboard: EQU 0x00006D16
Read_Keyboard_2: EQU 0x00006D11
Read_Keyboard_1: EQU 0x00006D01
Read_Keyboard_0: EQU 0x00006CF9
Keyboard_Map: EQU 0x00006E4D
WaitKeyRelease1: EQU 0x00006CE6
WaitKeyRelease: EQU 0x00006CE5
ReadKeyboard: EQU 0x00006CEF
printNewline2: EQU 0x00006CD4
printTab1: EQU 0x00006CC2
printAEnd: EQU 0x00006CAB
printALoop: EQU 0x00006C94
printCarriageReturn: EQU 0x00006CD9
printNewline: EQU 0x00006CC7
printTab: EQU 0x00006CB2
YELLOW: EQU 0x00000006
LIGHTBLUE: EQU 0x00000005
GREEN: EQU 0x00000004
PINK: EQU 0x00000003
RED: EQU 0x00000002
CHARSET: EQU 0x00003C00
screen_char_maxy: EQU 0x00000018
screen_char_maxx: EQU 0x00000020
attrib_len: EQU 0x00000300
SCREEN_ATTR: EQU 0x00005800
screen_len: EQU 0x00001800
screen_start: EQU 0x00004000
screen_size: EQU 0x00001800
screen_byte_line: EQU 0x00000020
screen_maxy: EQU 0x000000C0
screen_maxx: EQU 0x00000100
filllines1: EQU 0x000067DC
filllines: EQU 0x000067D0
spritecount: EQU 0x000067CC
spriteadr: EQU 0x000067C8
prepspriteRowN: EQU 0x000067A7
prepspriteRow0: EQU 0x00006791
prespriteix: EQU 0x0000678B
prepsprite1: EQU 0x00006767
spritedata: EQU 0x000067F6
prepsprite: EQU 0x0000675D
prepspritedata: EQU 0x00006759
drawsprite1: EQU 0x00006721
drawspritexor: EQU 0x0000673C
spriteprepdata: EQU 0x00006836
drawsprite: EQU 0x000066CE
line_4: EQU 0x000066B8
line_3: EQU 0x0000668B
line_end: EQU 0x000066BB
line_2: EQU 0x00006658
line_loop: EQU 0x00006632
line_1: EQU 0x00006622
line: EQU 0x0000657C
VARSYTLE: EQU 0x0000000C
VARER: EQU 0x0000000A
VARSGNY: EQU 0x00000009
VARSGNX: EQU 0x00000008
VARABSY: EQU 0x00000007
VARABSX: EQU 0x00000008
VARDIFFY: EQU 0x00000006
VARDIFFX: EQU 0x00000004
VARY2: EQU 0x00000003
VARX2: EQU 0x00000002
VARY1: EQU 0x00000001
VARX1: EQU 0x00000000
plotend: EQU 0x00006577
plotpoke: EQU 0x00006576
plotor: EQU 0x0000656C
plotand: EQU 0x00006571
plot2: EQU 0x00006558
plotdata: EQU 0x000067EE
plot: EQU 0x00006536
calcLineFast: EQU 0x00006527
linedata: EQU 0x00006E7D
BLACK: EQU 0x00000000
INK: EQU 0x00000008
WHITE: EQU 0x00000007
prepareChip8Screen_1: EQU 0x0000720F
charAttrib: EQU 0x00006515
wordLenEnd: EQU 0x0000650F
wordlenHLLoop: EQU 0x000064F6
wordlenHL: EQU 0x000064F2
printPageCheckWordWrapEnd: EQU 0x000064E6
printPageHLEnd: EQU 0x000064ED
GetKey: EQU 0x00006CDE
printPageCheckWordWrap: EQU 0x000064B8
printPageHLEndWaitKey: EQU 0x000064EA
printPageCharLoop1: EQU 0x00006470
printPageCharLoop: EQU 0x00006466
clearScreen: EQU 0x00006DCF
printPagePage: EQU 0x0000645A
printPagedHL: EQU 0x00006456
printdezHLEnd: EQU 0x00006424
printdezHLLoop2: EQU 0x00006416
printdezHLLoop: EQU 0x000063ED
printDezHL: EQU 0x000063BD
printDezHlSign_1: EQU 0x000063B8
printdezEnd: EQU 0x0000638C
printdezLoop2: EQU 0x0000637E
printdezLoop: EQU 0x00006359
printDezA: EQU 0x0000632A
printDez2Sgn2: EQU 0x00006327
chip8f_1e: EQU 0x00008513
printHex2Sgn2: EQU 0x00006314
printHex2Sgn: EQU 0x00006304
printNibble2: EQU 0x00006301
printNibbleDigit: EQU 0x000062FF
me: EQU 0x000062D2
scrollUpLoop: EQU 0x000062B2
scrollUp: EQU 0x000062AA
ckearTextLineLoop1: EQU 0x0000629D
calcLine: EQU 0x00006516
clearTextLineLoop: EQU 0x00006294
clearTextLine: EQU 0x0000628F
readNibbleAA: EQU 0x0000628C
readNibbleA: EQU 0x00006283
scroll: EQU 0x000080F2
newline2: EQU 0x0000626B
printH1: EQU 0x00006252
printHLLoop: EQU 0x0000624A
printHL: EQU 0x00006248
debugvarHLEnd: EQU 0x00006241
debugvarHL1: EQU 0x00006236
debugvarHL: EQU 0x00006233
debugvarAEnd: EQU 0x0000622D
debugvarA1: EQU 0x00006222
debugvarA: EQU 0x00006220
printHex4: EQU 0x0000644F
printDezHlSign: EQU 0x0000639D
printSetAt: EQU 0x000062EC
readHex2HL: EQU 0x00006270
printfHex4: EQU 0x00006215
printfDez4: EQU 0x0000620C
printDez2Sgn: EQU 0x00006318
printHex2: EQU 0x00006438
printNibble: EQU 0x000062F7
printfString: EQU 0x000061C2
printfHalfByte: EQU 0x000061B4
printfC: EQU 0x000061BB
printfDez2: EQU 0x000061D3
printfHex2: EQU 0x000061CB
printfLPar: EQU 0x000061DB
BLUE: EQU 0x00000001
printfAt: EQU 0x000061FC
newline: EQU 0x00006258
printfTab: EQU 0x00006184
printfSlash: EQU 0x0000617F
printfNewLine: EQU 0x0000617A
printfSpecialChar2: EQU 0x00006162
printfSpecialChar: EQU 0x00006155
printfpar: EQU 0x0000618B
printfEnd: EQU 0x0000614F
printfHL: EQU 0x00006139
printfExit: EQU 0x00006137
printfLoop: EQU 0x0000613B
printf: EQU 0x0000612E
printtextend: EQU 0x0000612C
printtext1: EQU 0x00006121
printtext: EQU 0x00006120
printA: EQU 0x00006C36
printTextHl: EQU 0x00006116
charY: EQU 0x00006514
charX: EQU 0x00006513
locate: EQU 0x0000610D
absHL_1: EQU 0x0000610B
absHL: EQU 0x000060FA
absAPos: EQU 0x000060F8
absA: EQU 0x000060EC
sgnHL_2: EQU 0x000060E9
sgnHL_1: EQU 0x000060E1
sgnHL: EQU 0x000060D8
sgnAPos: EQU 0x000060D5
sgnA: EQU 0x000060CB
NoMul16: EQU 0x000060C6
Mul16Loop: EQU 0x000060B9
Mul16BCxDE: EQU 0x000060B4
Div8NextBit: EQU 0x000060AF
Div8Loop: EQU 0x000060A7
DivHLxD: EQU 0x000060A2
Mul8bSkip: EQU 0x0000609F
Mul8bLoop: EQU 0x0000609A
MulHxD: EQU 0x00006095
Mul8Skip: EQU 0x0000608C
Mul8Loop: EQU 0x00006087
Mul8: EQU 0x00006080
MulHleqDExA: EQU 0x00006080
chip8Emulator: EQU 0x000080CF
cls: EQU 0x00006D7C
calcLines: EQU 0x00006D9A
vinterrupt: EQU 0x00007B23
updateScreenInterrupt: EQU 0x00007073
isrfunc: EQU 0x00006059
beep: EQU 0x00006E20
chip8beep: EQU 0x0000601F
chip8Memory: EQU 0x00009969
startMain: EQU 0x00006073
startInterrupts: EQU 0x00006031
fakeinterrupt: EQU 0x00000000
stack_top: EQU 0x0000AC57
main: EQU 0x00006000
ROM_PRINT: EQU 0x0000203C
ROM_OPEN_CHANNEL: EQU 0x00001601
ROM_CLS: EQU 0x00000DAF
LOCATE: EQU 0x0000000D
PRINTHL: EQU 0x0000000C
PRINTA: EQU 0x0000000B
SCROLL: EQU 0x0000000A
LINE: EQU 0x00000009
PLOT: EQU 0x00000008
DEMO: EQU 0x00000007
CLEARSCREEN: EQU 0x00000006
PREPSPRITEDATA: EQU 0x00000005
DRAWSPRITE: EQU 0x00000004
SPRITECOUNT: EQU 0x00000003
SPRITEADR: EQU 0x00000002
PREPARESPRITE: EQU 0x00000001
CALCLINES: EQU 0x00000000
DIRDOWN: EQU 0x00000003
DIRUP: EQU 0x00000002
DIRRIGHT: EQU 0x00000001
DIRLEFT: EQU 0x00000000
OPAND: EQU 0x00000003
disass_text: EQU 0x0000870E
OPOR: EQU 0x00000002
OPPOKE: EQU 0x00000001
OPXOR: EQU 0x00000000
MAXSPRITE: EQU 0x00000008
screen_top: EQU 0x00004000
START: EQU 0x00006000
NEX: EQU 0x00000001
DEBUG: EQU 0x00000001
line_step: EQU 0x0000000A
line_number: EQU 0x0000003C
line_useval: EQU 0x00000000
ZXB_GOTO: EQU 0x000000EC
ZX_STOP: EQU 0x000000E2
ZX_PRINT: EQU 0x000000F5
ZXB_USR: EQU 0x000000C0
ZXB_RANDOMIZE: EQU 0x000000F9
ZXB_CODE: EQU 0x000000AF
ZXB_LOAD: EQU 0x000000EF
ZXB_LET: EQU 0x000000F1
ZXB_INPUT: EQU 0x000000EE
ZXB_VAL: EQU 0x000000B0
ZXB_CLEAR: EQU 0x000000FD
