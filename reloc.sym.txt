line_50_begin: EQU 0x00005C4A
line_50_length: EQU 0x00000008
line_40_begin: EQU 0x00005C3F
line_40_length: EQU 0x00000007
line_30_begin: EQU 0x00005C32
line_30_length: EQU 0x00000009
line_20_begin: EQU 0x00005C1F
line_20_length: EQU 0x0000000F
line_10_begin: EQU 0x00005C04
line_10_length: EQU 0x00000017
code_size: EQU 0x00008D6D
chip8Game11X: EQU 0x0000ED69
romCollectionSize: EQU 0x00003AC1
chip8Game9X: EQU 0x0000ED69
chip8Game9: EQU 0x0000E18A
chip8Game8X: EQU 0x0000DAD3
chip8Game7X: EQU 0x0000DAD3
chip8Game7: EQU 0x0000D677
chip8Game5X: EQU 0x0000D4F2
chip8Game5: EQU 0x0000C6F1
chip8Game4X: EQU 0x0000C265
chip8Game4: EQU 0x0000C075
chip8Game2X: EQU 0x0000BAC8
chip8Game2: EQU 0x0000B5B1
chip8Game1X: EQU 0x0000B4F8
chip8Game1: EQU 0x0000B3DE
romCollection: EQU 0x0000B2A8
stack_top: EQU 0x0000B2A8
stack_bottom: EQU 0x0000B0B4
initGameInfo: EQU 0x0000AF8D
chip8InitGameLen: EQU 0x00000858
fontsize: EQU 0x000000F2
chip8ScreenEnd: EQU 0x00009980
ballsprite: EQU 0x000094F8
strFire: EQU 0x000094DD
strDown: EQU 0x000094D8
strUp: EQU 0x000094D5
strRight: EQU 0x000094CF
strLeft: EQU 0x000094CA
getKeyFromKempstonExit: EQU 0x000094A1
getKeyFromKempstonFound: EQU 0x000094A4
getKeyFromKempston1: EQU 0x00009497
getKeyFromKempston: EQU 0x0000948F
chip8KemstonEndPrint: EQU 0x0000947A
c8kSetSelected: EQU 0x0000947B
chip8KemstonEndLine: EQU 0x0000946E
chip8KemstonLine: EQU 0x00009449
kkeys: EQU 0x000094E2
printJoyAssignment2: EQU 0x00009435
printJoyAssignment1: EQU 0x0000941B
getJoyNameExit: EQU 0x00009409
strNone: EQU 0x000094E1
getJoyNameFound: EQU 0x0000940C
getJoyNameNone: EQU 0x00009406
getJoyName1: EQU 0x000093F9
kempstonText: EQU 0x000094BA
getJoyName: EQU 0x000093F3
kempstonFire: EQU 0x00000010
kempstonDown: EQU 0x00000004
kempstonRight: EQU 0x00000001
kempstonLeft: EQU 0x00000002
chip8kemstonKemstonPressed2: EQU 0x000093EC
chip8kemstonKemstonPressed1: EQU 0x000093E1
kempstonMap: EQU 0x000094A7
strOn: EQU 0x000094B2
kselected: EQU 0x000094F7
kempstonOnOff: EQU 0x000093BE
chip8KempstonMenuExit: EQU 0x000093CD
chip8kemstonKemstonPressed: EQU 0x000093CF
chip8KempstonKeyLoop: EQU 0x000093A4
setStrOn: EQU 0x000093C9
kempstonOn: EQU 0x000094B1
strOff: EQU 0x000094B6
printJoyAssignment: EQU 0x00009414
kprintkeys: EQU 0x00009442
chip8kemstonMenuLoop: EQU 0x000092C5
skipStringHLLoop: EQU 0x0000928E
chip8GameMenuFoundNoText: EQU 0x00009277
chip8GameMenuFound: EQU 0x00009268
chip8GameMenuNotFound: EQU 0x00009266
chip8GameMenuFind: EQU 0x0000924C
chip8GameMenuStartFind: EQU 0x00009249
chip8GameMenuStartFindA: EQU 0x00009247
skipStringHL: EQU 0x0000928D
chip8GameMenuWait: EQU 0x00009230
chip8GameMenuLoop: EQU 0x0000920B
chip8Games: EQU 0x0000B2B2
strNo: EQU 0x00009168
strYes: EQU 0x00009164
yesno_no: EQU 0x00009160
menuChangeUpdate1: EQU 0x00009115
txtUpdateInterrupt: EQU 0x00009144
txtUpdateInterruptNr: EQU 0x00009150
txtUpdateDirect: EQU 0x0000912E
printMenuHintBig: EQU 0x0000916B
chip8KemstonMenu: EQU 0x00009296
chip8GameMenu: EQU 0x000091ED
menuChangeUpdate: EQU 0x00009106
menuModifyShift: EQU 0x00009054
menuModifyAddI: EQU 0x00009049
menuKempston: EQU 0x000090BA
menuSetZoom: EQU 0x0000905F
menuQuitToGame: EQU 0x0000906E
menuChangeWait: EQU 0x00009091
menuDebugGame: EQU 0x000090AD
menuLoadGame: EQU 0x0000908A
menuResetGame: EQU 0x00009079
menuStartGame: EQU 0x0000906A
selectGame: EQU 0x000090B4
chip8MenuLoop: EQU 0x00009010
chip8MenuZoom: EQU 0x00008F26
yesno: EQU 0x00009158
getTextUpdate: EQU 0x000090F1
singleStepHelp: EQU 0x00008E11
debugGoAdrChar: EQU 0x00008D0A
debugGoAdrLoop: EQU 0x00008C9D
dodebug_stepinto: EQU 0x00008C69
dodebug_go9: EQU 0x00008C62
dodebug_go0: EQU 0x00008C5B
dodebug_restart: EQU 0x00008BEC
dodebug_update: EQU 0x00008C0E
dodebug_print: EQU 0x00008BF2
dodebug_run7: EQU 0x00008C13
dodebug_run8: EQU 0x00008C20
dodebug_run9: EQU 0x00008C27
dodebug_run0: EQU 0x00008C06
dodebug_end: EQU 0x00008BC3
dodebug_run: EQU 0x00008C4A
dodebug_end2: EQU 0x00008C49
dodebug_1: EQU 0x00008BB6
printcpuLoopI: EQU 0x00008B88
printcpuloop2: EQU 0x00008B47
printcpuloop1: EQU 0x00008B25
printcpunodb: EQU 0x00008B0E
debuggerScreenEnd: EQU 0x00008AC4
debuggerScreenLoopBP2: EQU 0x00008AB4
debuggerScreenLoopBP1: EQU 0x00008AB2
debuggerScreenLoop1: EQU 0x00008AA1
debuggerScreenLoop: EQU 0x00008A90
debuggerDown1: EQU 0x00008A45
debuggerUp1: EQU 0x00008A20
debugSetClearBPSet: EQU 0x000089CD
debugtHelp: EQU 0x00008D25
debugGoAdr: EQU 0x00008C77
debugSetClearBP: EQU 0x000089BE
debuggerPgDown: EQU 0x000089D2
debuggerPgUp: EQU 0x000089E8
debuggerDown: EQU 0x00008A24
debuggerUp: EQU 0x00008A02
debuggerQuit: EQU 0x000089AE
debuggerMainKey: EQU 0x0000897F
debuggerScreen: EQU 0x00008A49
debuggerMain: EQU 0x0000897C
setBreakpointEnd: EQU 0x0000896B
setBreakpoint2: EQU 0x00008974
setBreakpoint1: EQU 0x00008957
SetBreakpointHl: EQU 0x0000894C
clearBreakpointEnd: EQU 0x00008938
clearBreakpoint2: EQU 0x00008941
clearBreakpoint1: EQU 0x00008927
ClearBreakpointHl: EQU 0x0000891A
isHlBreakpointEnd: EQU 0x00008910
isHlBreakpoint2: EQU 0x00008916
isHlBreakpoint1: EQU 0x000088FD
countBreakpointsLoop2: EQU 0x000088E4
countBreakpointsLoopCount: EQU 0x000088E3
countBreakpointsLoop: EQU 0x000088CF
disassBreakpoints: EQU 0x0000889D
disassMaxBreakpoints: EQU 0x00000014
disassNumBreakpoints: EQU 0x0000889C
debug_gobp: EQU 0x0000889A
DEBUG_GO: EQU 0x00000002
DEBUG_GONEXT: EQU 0x00000001
disassCur: EQU 0x00008896
disassAdr: EQU 0x00008894
emitdezHLEnd: EQU 0x00008822
emitdezHLLoop2: EQU 0x00008814
emitdezHLLoop: EQU 0x000087EB
emitDezHL: EQU 0x000087BB
emitDezHlSign_1: EQU 0x000087B6
emitDezHlSign: EQU 0x0000879B
emitdezEnd: EQU 0x0000878A
emitdezLoop2: EQU 0x0000877C
emitdezLoop: EQU 0x00008757
emitDezA: EQU 0x00008728
emitDez2Sgn2: EQU 0x00008725
emitHex2Sgn2: EQU 0x00008712
emitHex2Sgn: EQU 0x00008702
emitNibble2: EQU 0x000086FF
emitNibbleDigit: EQU 0x000086FD
demittextend: EQU 0x000086F3
demittext1: EQU 0x000086E8
dPrintText_2: EQU 0x000086D4
dPrintText_1: EQU 0x000086C9
dPrintText: EQU 0x000086C2
chip8f_audio: EQU 0x0000860F
chip8f_plane: EQU 0x00008602
chip8f_56: EQU 0x000086B1
chip8f_65: EQU 0x000086A0
chip8f_55: EQU 0x0000868E
chip8f_33: EQU 0x0000867E
chip8f_29: EQU 0x0000866D
chip8f_0a: EQU 0x00008658
chip8f_18: EQU 0x00008638
chip8f_15: EQU 0x00008629
chip8f_07: EQU 0x00008619
emitHighReg: EQU 0x000085BE
dchip8skipifkey_a1: EQU 0x000085AB
dchip8skipifkey_9e: EQU 0x00008599
dEmitA: EQU 0x000086D9
emitEqual: EQU 0x000084EB
dchip8_regY: EQU 0x000084E1
dchip8_regX: EQU 0x000084D7
dchip8_E: EQU 0x000084C2
dchip8_7: EQU 0x000084AE
dchip8_6: EQU 0x00008499
dchip8_5: EQU 0x00008485
dchip8_4: EQU 0x00008471
dchip8_3: EQU 0x0000845B
dchip8_2: EQU 0x00008446
dchip8_1: EQU 0x00008432
dchip8_0: EQU 0x0000841C
emitNibble: EQU 0x000086F5
emitText: EQU 0x000086E7
dchip8unknowncall: EQU 0x0000831F
dchip8call_rts: EQU 0x00008336
dchip8call_cls: EQU 0x0000832E
dchip8timers: EQU 0x000085C9
dchip8skipifkey: EQU 0x0000857F
dchip8display: EQU 0x00008559
dchip8xrand: EQU 0x0000853C
dchip8jumpofs: EQU 0x00008526
dchip8setindex: EQU 0x0000851A
dchip89: EQU 0x000084F3
dchip8setetc: EQU 0x000083E4
dchip8addnnvx: EQU 0x000083CE
dchip8setvxnn: EQU 0x000083B9
dchip8skipvxeqvy: EQU 0x00008393
dchip8skipvxnenn: EQU 0x00008375
dchip8skipvxeqnn: EQU 0x00008358
dchip8call: EQU 0x0000834B
dchip8jump: EQU 0x0000833E
dchip8callasm: EQU 0x00008316
chip8disassend: EQU 0x000082ED
disassJumpTable: EQU 0x000082F6
emitHex2: EQU 0x00008836
emitSpace: EQU 0x000086DF
emitHex4: EQU 0x0000884D
chip8disass: EQU 0x0000829A
opt_new_jump: EQU 0x00008295
countBreakpoints: EQU 0x000088C5
resetloop: EQU 0x00008246
startchip8: EQU 0x000081F7
tqChipUdate: EQU 0x000081E0
tqChipNoUdate: EQU 0x000081D5
octoChip8loadFlags: EQU 0x000081C2
chip8f85: EQU 0x000081BD
chip8f75: EQU 0x000081BC
opt_new_addi: EQU 0x00008296
chip8fStore: EQU 0x0000815C
chip8f33_loop: EQU 0x00008142
bigfont: EQU 0x00009FDF
chip80a_menu: EQU 0x000080DD
chip80a_debug: EQU 0x000080D3
octoChip8LongI: EQU 0x000081E6
chip8Font: EQU 0x00009F8F
octoChip8Pitch: EQU 0x000081C5
octoChip8Audio: EQU 0x000081C4
octoChip8Plane: EQU 0x000081C3
tqChipScreen: EQU 0x000081C6
octoChip8saveFlags: EQU 0x000081C1
chip8fF8: EQU 0x000081C0
chip8fFB: EQU 0x000081BF
chip8f94: EQU 0x000081BE
chip8f65: EQU 0x00008191
chip8f55: EQU 0x00008166
chip8f33: EQU 0x00008129
chip8f30: EQU 0x00008114
chip8f29: EQU 0x000080FF
chip8f1E: EQU 0x000080EE
chip8f18: EQU 0x000080E7
chip8f15: EQU 0x000080E2
chip8f0A: EQU 0x000080C3
chip8f07: EQU 0x000080BE
chip8skipifkeya1: EQU 0x0000803F
chip8skipifkey9e: EQU 0x00008034
startDebug: EQU 0x00007FCD
chip8shifte1: EQU 0x00007F89
chip8shrightNew: EQU 0x00007F74
cpu_new_shift: EQU 0x00008297
chip8jmp8: EQU 0x00007F17
chip8illegal: EQU 0x00007F16
chip8shifte: EQU 0x00007F7F
chip8subyx: EQU 0x00007F5D
chip8shright: EQU 0x00007F6A
chip8subxy: EQU 0x00007F50
chip8add8: EQU 0x00007F45
chip8xor8: EQU 0x00007F41
chip8and8: EQU 0x00007F3D
chip8or8: EQU 0x00007F39
chip8set8: EQU 0x00007F37
octoSaveLoop2: EQU 0x00007EAD
octoSaveLoop1: EQU 0x00007E9F
octoSavexyR: EQU 0x00007EA9
shifte: EQU 0x00007E85
octoLoadxy: EQU 0x00007EB7
octoSavexy: EQU 0x00007E8E
chip8UpdateScreen: EQU 0x00007DD8
chip8ScrollUpUpN: EQU 0x00007DBB
chip8ScrollUpDownN: EQU 0x00007DB4
chip8stop: EQU 0x00007DA2
chip8Scroll4Left: EQU 0x00007DAE
chip8Scroll4Right: EQU 0x00007DAB
chip8SetChip8Screen: EQU 0x00007DC0
chip8SetSuperScreen: EQU 0x00007DCC
chip8rts: EQU 0x00007DEE
chip8cls: EQU 0x00007DDC
cpufinloop: EQU 0x00007D70
opt_wait: EQU 0x00008298
cpuloop: EQU 0x00007D1D
chip8cpu: EQU 0x00007D03
clearRegistersLoop: EQU 0x00007CFC
clearRegisters: EQU 0x00007CF2
updateScreenOnI: EQU 0x00007CEA
skiplong: EQU 0x00007CE5
skip1: EQU 0x00007CD3
skip: EQU 0x00007CC7
vinterrupt_2: EQU 0x00007CC6
vinterrupt_1: EQU 0x00007CBB
vinterruptcheckKey: EQU 0x00007CA8
chip8timers: EQU 0x0000804A
chip8skipifkey: EQU 0x00008023
chip8display: EQU 0x00007FE7
chip8xrand: EQU 0x00007FD5
chip8jumpofs: EQU 0x00007FBC
chip8setindex: EQU 0x00007FB5
chip89: EQU 0x00007F94
chip8setetc: EQU 0x00007ECC
chip8addnnvx: EQU 0x00007EC1
chip8setvxnn: EQU 0x00007EB8
chip8skipvxeqvy: EQU 0x00007E5D
chip8skipvxnenn: EQU 0x00007E4F
chip8skipvxeqnn: EQU 0x00007E41
chip8call: EQU 0x00007E23
chip8jump: EQU 0x00007E10
chip8callasm: EQU 0x00007D73
cpuJumpTable: EQU 0x00007C88
IsBreakpointHl: EQU 0x000088ED
cpuTestBreakpoint3: EQU 0x00007C82
cpuTestBreakpoint2: EQU 0x00007C7B
cpuTestBreakpoint0: EQU 0x00007C66
cpuTestBreakpoint: EQU 0x00007C5B
cpuIsBreakpoint: EQU 0x00007C55
cpuwait: EQU 0x00007C49
chip8Menu: EQU 0x00008ECB
resetcpu: EQU 0x0000821B
debug_go: EQU 0x00008899
DEBUG_STEP: EQU 0x00000000
printMenuHint: EQU 0x000090C0
gameInfo: EQU 0x0000B0B2
cpuKeyInfo: EQU 0x00007C1A
cpukeyMenu: EQU 0x00007C3E
cpukeyReset: EQU 0x00007C3A
cpuKeySingleStep: EQU 0x00007C34
cpuCheckKey: EQU 0x00007BF9
dodebug: EQU 0x00008B99
cpu_debug: EQU 0x00008898
printcpu: EQU 0x00008ACB
cpuDoDebug: EQU 0x00007BED
reg_size: EQU 0x00000044
reg_quit: EQU 0x00000043
reg_stacktop: EQU 0x00000042
reg_stack: EQU 0x00000020
reg_cpuStepOverBreakpointAdr: EQU 0x00000020
reg_cpuStepOverBreakpointNext: EQU 0x0000001E
reg_cpuStepOverBreakpoint: EQU 0x0000001D
reg_hasBreakpoint: EQU 0x0000001C
reg_fakeir: EQU 0x0000001A
reg_sp: EQU 0x00000018
reg_pc: EQU 0x00000016
reg_delay: EQU 0x00000013
reg_sound: EQU 0x00000012
reg_i: EQU 0x00000010
reg_ve: EQU 0x0000000D
reg_vd: EQU 0x0000000D
reg_vc: EQU 0x0000000C
reg_vb: EQU 0x0000000B
reg_va: EQU 0x0000000A
reg_v9: EQU 0x00000009
reg_v8: EQU 0x00000008
reg_v7: EQU 0x00000007
reg_v6: EQU 0x00000006
reg_v5: EQU 0x00000005
reg_v4: EQU 0x00000004
reg_v3: EQU 0x00000003
reg_v2: EQU 0x00000002
reg_v1: EQU 0x00000001
reg_v0: EQU 0x00000000
STARTMODE: EQU 0x00000003
DEBUG_RUN: EQU 0x00000003
breakonunknown: EQU 0x00000000
debugcpu: EQU 0x00000001
chip8FontEnd: EQU 0x00007BED
chip8Font1016: EQU 0x00007AAD
screen_translation_table: EQU 0x00007A87
readHexKeyboardNoKey2: EQU 0x00007A6E
readHexKeyboard2: EQU 0x00007A42
keyboard_map: EQU 0x00007A89
readHexKeyboardNoKey: EQU 0x00007A24
readHexKeyboard1: EQU 0x00007A3B
readHexKeyboard: EQU 0x00007A1D
checkMultipleHexKeyNotFound2: EQU 0x00007A16
getKempstonKey: EQU 0x00009481
checkMultipleHexKeyFound: EQU 0x000079FF
translateHexKeybardA: EQU 0x00007A3B
checkMultipleHexKeyNotFound: EQU 0x00007A06
checkMultipleHexKeyLoop: EQU 0x000079F2
checkMultipleHexKeyA: EQU 0x000079E9
scrollUpClearLoop2: EQU 0x000079E1
scrollUpClearLoop1: EQU 0x000079E0
scrollUpALoop: EQU 0x000079C4
scrollUpA: EQU 0x000079B0
calcScreen16Line: EQU 0x000079A9
calcScreenLine: EQU 0x0000799F
calcScreen8Line: EQU 0x00007999
scrollDownLoop2: EQU 0x0000798A
scrollDownLoop1: EQU 0x00007984
scrollDownLoop: EQU 0x00007965
scrollDownA: EQU 0x0000792D
scroll4LeftLoop2: EQU 0x0000791C
scroll4LeftLoop: EQU 0x00007915
scroll4Left: EQU 0x00007903
scroll4RightLoop2: EQU 0x000078F3
scroll4RightLoop: EQU 0x000078ED
scroll4Right: EQU 0x000078DB
setChipScreen: EQU 0x000078B1
setSuperChipSub: EQU 0x00007882
setSuperChip: EQU 0x0000786C
SCREEN_MODE_NO_ZOOM: EQU 0x00000004
chip8_screen_mode: EQU 0x0000786B
checkDEisInScreenErr: EQU 0x00007859
checkDEisInScreenOk: EQU 0x00007850
checkDEisInScreen: EQU 0x0000783F
copySpriteToScreen1x1LineLoop1: EQU 0x00007814
copySpriteToScreen1x1LineLoop: EQU 0x000077F0
copySpriteToScreenChipByteCopy1: EQU 0x000077B0
kempstonUp: EQU 0x00000008
error1: EQU 0x0000775E
copySpriteToScreenChipByteCopy2: EQU 0x00007759
copySpriteToScreenChipByteLoopMagEnd: EQU 0x00007755
copySpriteToScreenChipByteLoopMag4: EQU 0x00007749
copySpriteToScreenChipByteLoop: EQU 0x00007731
setBto2: EQU 0x000077B7
setBto1: EQU 0x000077B4
screen_bytes_per_pixel: EQU 0x0000786A
copySpriteToScreenChipCopyByteLoop: EQU 0x00007712
copySpriteToScreenLineLoop: EQU 0x000076F8
copySpriteToScreenMag: EQU 0x000076EB
copySpriteToScreenMag4: EQU 0x000076E6
copySpriteToScreen2: EQU 0x000076CE
copySpriteToScreen1: EQU 0x000076A4
updateScreen1x1: EQU 0x000077BA
copySpriteToScreenMarkDirty: EQU 0x00007684
copySpriteToScreen1a: EQU 0x00007689
updateSScreen1: EQU 0x00007645
updateScreen1: EQU 0x000075D5
updateScreenLine1: EQU 0x000075D3
updateScreenLine: EQU 0x000075C6
updateSScreen: EQU 0x00007603
updateScreen: EQU 0x00007581
sspriteRowBit1: EQU 0x00007539
sspritRowShift0: EQU 0x00007541
sspriteRow1: EQU 0x0000751F
schip8sprite_calc1: EQU 0x000074E9
screen_width: EQU 0x00007863
chip8spriteClipped: EQU 0x000074D3
updateSpriteScreenEnd: EQU 0x000074D1
updateSpriteScreen1: EQU 0x000074CA
copySpriteToScreen: EQU 0x00007669
updateSpriteScreen: EQU 0x000074BB
spriteRowBit1: EQU 0x0000747B
spritRowShift0: EQU 0x00007481
spriteRow1: EQU 0x00007468
sprite8NotLastByte: EQU 0x00007461
calcSpriteAdrInChip8Screen: EQU 0x000074D9
reg_vf: EQU 0x0000000F
cpu_registers: EQU 0x00008251
spriteSChip: EQU 0x00007505
screen_mask_y: EQU 0x00007869
ok: EQU 0x00007422
screen_mask_x: EQU 0x00007868
chip8sprite: EQU 0x000073E6
spriteCheckMaxLinesEnd: EQU 0x000073E4
spriteCheckMaxLines2: EQU 0x000073D4
spriteCheckMaxLines: EQU 0x000073BE
priprintChip8A_end: EQU 0x000073B7
printChip8A_1: EQU 0x000073AE
printChip8A: EQU 0x00007384
prepareSChip8Screen_3: EQU 0x00007364
prepareSChip8Screen_2: EQU 0x0000735F
prepareSChip8Screen_1: EQU 0x00007359
prepareChip8Screen_3: EQU 0x00007329
prepareChip8Screen_2: EQU 0x00007324
prepareSChip8Screen: EQU 0x00007353
prepareChip8Screen: EQU 0x00007315
initChip8: EQU 0x00007307
clearScreenChip8_1: EQU 0x000072F4
clearScreenChip8: EQU 0x000072EB
updateScreenChip81x1LineLoop: EQU 0x000072CE
updateGameScreen1x1: EQU 0x00007282
updateScreenChip8CopyLine: EQU 0x00007257
schip8ScreenBytes: EQU 0x00009D80
updateScreenChip8Loop4Paint: EQU 0x00007237
emitDez2Sgn: EQU 0x00008716
chip8ScreenBytes: EQU 0x00009980
updateScreenChip8Loop2Super: EQU 0x00007231
updateScreenChip8Loop2: EQU 0x00007219
updateScreenChip8End: EQU 0x00007271
screen_mag_y: EQU 0x00007867
updateScreenChip8Loop1a: EQU 0x0000720D
screen_widthbytes: EQU 0x00007865
updateScreenChip8Loop1: EQU 0x000071DE
screen_height: EQU 0x00007864
updateScreenChip81x1: EQU 0x000072B3
screen_mag_x: EQU 0x00007866
SCREEN_MODE_SCHIP8: EQU 0x00000001
SCREEN_MODE_CHIP8: EQU 0x00000000
us_var_space: EQU 0x00000004
us_chip_y: EQU 0x00000003
us_var_y: EQU 0x00000002
us_var_x: EQU 0x00000001
updateGameScreenDirtyLinesForce: EQU 0x0000716C
updateGameScreenDirtyLinesExit: EQU 0x00007167
screenOnOff: EQU 0x00007862
updateGameScreenDirtyLines: EQU 0x00007153
updateScreenChip8: EQU 0x00007196
chip8Screen: EQU 0x00009500
updateGameScreen1: EQU 0x0000713E
updateGameScreen: EQU 0x00007130
dirtyScreenLines: EQU 0x000070B0
screenSkipCounter: EQU 0x000070AF
screenSkipFrames: EQU 0x000070AE
screenNeedsRedraw: EQU 0x000070AD
screenDirty: EQU 0x000070AC
updateOnInterrupt: EQU 0x000070AB
SpriteVar.padding: EQU 0x00000014
SpriteVar.memoryCopy: EQU 0x00000012
SpriteVar.memory: EQU 0x00000010
SpriteVar.screenIdx: EQU 0x0000000E
SpriteVar.lineEnd: EQU 0x0000000C
SpriteVar.line: EQU 0x0000000A
SpriteVar.magtable: EQU 0x00000008
SpriteVar.data: EQU 0x00000006
SpriteVar.lines: EQU 0x00000005
SpriteVar.xlargebyte: EQU 0x00000003
SpriteVar.xbyte: EQU 0x00000002
SpriteVar.y: EQU 0x00000001
SpriteVar.x: EQU 0x00000000
SpriteVar: EQU 0x00000018
checkScreenRange: EQU 0x00000000
beeploop2x: EQU 0x00006EF7
beeploop1x: EQU 0x00006EEA
beeploop1: EQU 0x00006ED8
beeploop2: EQU 0x00006ED3
border: EQU 0x00006EFA
markScreenLoop1: EQU 0x00006EBE
markScreenLoop: EQU 0x00006EB7
markScreen: EQU 0x00006EAE
clearLowerScreen3: EQU 0x00006EA7
clearLowerScreen2: EQU 0x00006E99
clearLowerScreen1: EQU 0x00006E90
clearLowerScreenBlue: EQU 0x00006E87
clearLowerScreen: EQU 0x00006E89
clearLowerScreenWhite: EQU 0x00006E83
clearAttribLoop: EQU 0x00006E70
clearScreenLoop: EQU 0x00006E5B
setGameScreenAttributesLoop: EQU 0x00006E40
setGameScreenAttributesHLBC: EQU 0x00006E3E
setGameScreenAttributes: EQU 0x00006E38
screenAttribs: EQU 0x00006E4D
setCurrentScreenAttributes: EQU 0x00006E1E
changeScreenAttrib2: EQU 0x00006E15
screenMaxAttrib: EQU 0x00000004
screenCurAttrib: EQU 0x00006E51
changeScreenAttrib: EQU 0x00006E09
calclines3: EQU 0x00006DE8
calclines2: EQU 0x00006DE1
calclines1: EQU 0x00006DDD
cls2: EQU 0x00006DC9
cls1: EQU 0x00006DBC
ReadMKeyboard_2: EQU 0x00006D7C
ReadMKeyboard_1: EQU 0x00006D6C
ReadMKeyboard_0: EQU 0x00006D64
ReadKeyboardPressedKeys: EQU 0x00006D8D
ReadMKeyboard: EQU 0x00006D50
Read_Keyboard_2: EQU 0x00006D4B
Read_Keyboard_1: EQU 0x00006D3B
Read_Keyboard_0: EQU 0x00006D33
Keyboard_Map: EQU 0x00006EFB
WaitKeyRelease1: EQU 0x00006D20
WaitKeyRelease: EQU 0x00006D1F
GetKeyOrJoystick2: EQU 0x00006D0E
ReadKeyboard: EQU 0x00006D29
GetKeyOrJoystick: EQU 0x00006CF8
printNewline2: EQU 0x00006CEE
printTab1: EQU 0x00006CDC
printAEnd: EQU 0x00006CC5
printALoop: EQU 0x00006CAE
printCarriageReturn: EQU 0x00006CF3
printNewline: EQU 0x00006CE1
printTab: EQU 0x00006CCC
YELLOW: EQU 0x00000006
LIGHTBLUE: EQU 0x00000005
GREEN: EQU 0x00000004
PINK: EQU 0x00000003
RED: EQU 0x00000002
CHARSET: EQU 0x00003C00
screen_char_maxy: EQU 0x00000018
screen_char_maxx: EQU 0x00000020
attrib_len: EQU 0x00000300
SCREEN_ATTR: EQU 0x00005800
screen_len: EQU 0x00001800
screen_start: EQU 0x00004000
screen_size: EQU 0x00001800
screen_byte_line: EQU 0x00000020
screen_maxy: EQU 0x000000C0
screen_maxx: EQU 0x00000100
filllines1: EQU 0x000067F6
filllines: EQU 0x000067EA
spritecount: EQU 0x000067E6
spriteadr: EQU 0x000067E2
prepspriteRowN: EQU 0x000067C1
prepspriteRow0: EQU 0x000067AB
prespriteix: EQU 0x000067A5
prepsprite1: EQU 0x00006781
spritedata: EQU 0x00006810
prepsprite: EQU 0x00006777
prepspritedata: EQU 0x00006773
drawsprite1: EQU 0x0000673B
drawspritexor: EQU 0x00006756
spriteprepdata: EQU 0x00006850
drawsprite: EQU 0x000066E8
line_4: EQU 0x000066D2
line_3: EQU 0x000066A5
line_end: EQU 0x000066D5
line_2: EQU 0x00006672
line_loop: EQU 0x0000664C
line_1: EQU 0x0000663C
line: EQU 0x00006596
VARSYTLE: EQU 0x0000000C
VARER: EQU 0x0000000A
VARSGNY: EQU 0x00000009
VARSGNX: EQU 0x00000008
VARABSY: EQU 0x00000007
VARABSX: EQU 0x00000008
VARDIFFY: EQU 0x00000006
VARDIFFX: EQU 0x00000004
VARY2: EQU 0x00000003
VARX2: EQU 0x00000002
VARY1: EQU 0x00000001
VARX1: EQU 0x00000000
plotend: EQU 0x00006591
plotpoke: EQU 0x00006590
plotor: EQU 0x00006586
plotand: EQU 0x0000658B
plot2: EQU 0x00006572
plotdata: EQU 0x00006808
plot: EQU 0x00006550
calcLineFast: EQU 0x00006541
linedata: EQU 0x00006F2B
BLACK: EQU 0x00000000
PAPER: EQU 0x00000008
WHITE: EQU 0x00000007
prepareChip8Screen_1: EQU 0x0000731B
charAttrib: EQU 0x0000652F
wordLenEnd: EQU 0x00006529
wordlenHLLoop: EQU 0x00006510
wordlenHL: EQU 0x0000650C
printPageCheckWordWrapEnd: EQU 0x00006500
printPageHLEnd: EQU 0x00006507
GetKey: EQU 0x00006D18
printPageCheckWordWrap: EQU 0x000064D2
printPageHLEndWaitKey: EQU 0x00006504
printPageCharLoop1: EQU 0x0000648A
printPageCharLoop: EQU 0x00006480
clearScreen: EQU 0x00006E52
printPagePage: EQU 0x00006474
printPagedHL: EQU 0x00006470
printdezHLEnd: EQU 0x0000643E
printdezHLLoop2: EQU 0x00006430
printdezHLLoop: EQU 0x00006407
printDezHL: EQU 0x000063D7
printDezHlSign_1: EQU 0x000063D2
printdezEnd: EQU 0x000063A6
printdezLoop2: EQU 0x00006398
printdezLoop: EQU 0x00006373
printDezA: EQU 0x00006344
printDez2Sgn2: EQU 0x00006341
chip8f_1e: EQU 0x00008648
printHex2Sgn2: EQU 0x0000632E
printHex2Sgn: EQU 0x0000631E
printNibble2: EQU 0x0000631B
printNibbleDigit: EQU 0x00006319
me: EQU 0x000062EC
scrollUpLoop: EQU 0x000062CC
scrollUp: EQU 0x000062C4
ckearTextLineLoop1: EQU 0x000062B7
calcLine: EQU 0x00006530
clearTextLineLoop: EQU 0x000062AE
clearTextLine: EQU 0x000062A9
readNibbleAA: EQU 0x000062A6
readNibbleA: EQU 0x0000629D
scroll: EQU 0x0000821A
newline2: EQU 0x00006285
printH1: EQU 0x0000626C
printHLLoop: EQU 0x00006264
printHL: EQU 0x00006262
debugvarHLEnd: EQU 0x0000625B
debugvarHL1: EQU 0x00006250
debugvarHL: EQU 0x0000624D
debugvarAEnd: EQU 0x00006247
debugvarA1: EQU 0x0000623C
debugvarA: EQU 0x0000623A
printHex4: EQU 0x00006469
printDezHlSign: EQU 0x000063B7
printSetAt: EQU 0x00006306
readHex2HL: EQU 0x0000628A
printfHex4: EQU 0x0000622F
printfDez4: EQU 0x00006226
printDez2Sgn: EQU 0x00006332
printHex2: EQU 0x00006452
printNibble: EQU 0x00006311
printfString: EQU 0x000061DC
printfHalfByte: EQU 0x000061CE
printfC: EQU 0x000061D5
printfDez2: EQU 0x000061ED
printfHex2: EQU 0x000061E5
printfLPar: EQU 0x000061F5
BLUE: EQU 0x00000001
printfAt: EQU 0x00006216
newline: EQU 0x00006272
printfTab: EQU 0x0000619E
printfSlash: EQU 0x00006199
printfNewLine: EQU 0x00006194
printfSpecialChar2: EQU 0x0000617C
printfSpecialChar: EQU 0x0000616F
printfpar: EQU 0x000061A5
printfEnd: EQU 0x00006169
printfHL: EQU 0x00006153
printfExit: EQU 0x00006151
printfLoop: EQU 0x00006155
printf: EQU 0x00006148
printtextend: EQU 0x00006146
printtext1: EQU 0x0000613B
printtext: EQU 0x0000613A
printA: EQU 0x00006C50
printTextHl: EQU 0x00006130
charY: EQU 0x0000652E
charX: EQU 0x0000652D
locate: EQU 0x00006127
xrnd: EQU 0x00006112
absHL_1: EQU 0x00006110
absHL: EQU 0x000060FF
absAPos: EQU 0x000060FD
absA: EQU 0x000060F1
sgnHL_2: EQU 0x000060EE
sgnHL_1: EQU 0x000060E6
sgnHL: EQU 0x000060DD
sgnAPos: EQU 0x000060DA
sgnA: EQU 0x000060D0
NoMul16: EQU 0x000060CB
Mul16Loop: EQU 0x000060BE
Mul16BCxDE: EQU 0x000060B9
Div8NextBit: EQU 0x000060B4
Div8Loop: EQU 0x000060AC
DivHLxD: EQU 0x000060A7
Mul8bSkip: EQU 0x000060A4
Mul8bLoop: EQU 0x0000609F
MulHxD: EQU 0x0000609A
Mul8Skip: EQU 0x00006091
Mul8Loop: EQU 0x0000608C
Mul8: EQU 0x00006085
MulHleqDExA: EQU 0x00006085
chip8Emulator: EQU 0x000081F7
cls: EQU 0x00006DB6
calcLines: EQU 0x00006DD4
vinterrupt: EQU 0x00007CB0
updateScreenInterrupt: EQU 0x0000717E
isrfunc: EQU 0x0000605E
beep: EQU 0x00006ECE
chip8beep: EQU 0x00006024
chip8Memory: EQU 0x00009F8D
startMain: EQU 0x00006078
startInterrupts: EQU 0x00006036
fakeinterrupt: EQU 0x00000000
main: EQU 0x00006000
ROM_PRINT: EQU 0x0000203C
ROM_OPEN_CHANNEL: EQU 0x00001601
ROM_CLS: EQU 0x00000DAF
LOCATE: EQU 0x0000000D
PRINTHL: EQU 0x0000000C
PRINTA: EQU 0x0000000B
SCROLL: EQU 0x0000000A
LINE: EQU 0x00000009
PLOT: EQU 0x00000008
DEMO: EQU 0x00000007
CLEARSCREEN: EQU 0x00000006
PREPSPRITEDATA: EQU 0x00000005
DRAWSPRITE: EQU 0x00000004
SPRITECOUNT: EQU 0x00000003
SPRITEADR: EQU 0x00000002
PREPARESPRITE: EQU 0x00000001
CALCLINES: EQU 0x00000000
DIRDOWN: EQU 0x00000003
DIRUP: EQU 0x00000002
DIRRIGHT: EQU 0x00000001
DIRLEFT: EQU 0x00000000
OPAND: EQU 0x00000003
disass_text: EQU 0x00008854
OPOR: EQU 0x00000002
OPPOKE: EQU 0x00000001
OPXOR: EQU 0x00000000
MAXSPRITE: EQU 0x00000008
screen_top: EQU 0x00004000
START: EQU 0x00006000
NEX: EQU 0x00000001
DEBUG: EQU 0x00000000
line_step: EQU 0x0000000A
line_number: EQU 0x0000003C
line_useval: EQU 0x00000000
ZXB_GOTO: EQU 0x000000EC
ZX_STOP: EQU 0x000000E2
ZX_PRINT: EQU 0x000000F5
ZXB_USR: EQU 0x000000C0
ZXB_RANDOMIZE: EQU 0x000000F9
ZXB_CODE: EQU 0x000000AF
ZXB_LOAD: EQU 0x000000EF
ZXB_LET: EQU 0x000000F1
ZXB_INPUT: EQU 0x000000EE
ZXB_VAL: EQU 0x000000B0
ZXB_CLEAR: EQU 0x000000FD
GetKeyOrJoystick3: EQU 0x00006D0F
